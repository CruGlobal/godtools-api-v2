<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:content="https://mobile-content-api.cru.org/xmlns/content" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    attributeFormDefault="unqualified" elementFormDefault="qualified"
    targetNamespace="https://mobile-content-api.cru.org/xmlns/content">

    <!-- Value definitions -->
    <xs:simpleType name="colorValue">
        <xs:restriction base="xs:string">
            <xs:pattern value="rgba\([0-9]{1,3},\s*[0-9]{1,3},\s*[0-9]{1,3},\s*([01]|0?\.[0-9]*)\)" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="imageScaleType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fit">
                <xs:annotation>
                    <xs:documentation>Scale image to fit the UI size without cropping any of the image
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fill">
                <xs:annotation>
                    <xs:documentation>Scale image to completely fill the UI, cropping if necessary</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fill-x">
                <xs:annotation>
                    <xs:documentation>Scale image to match the width of the UI, cropping if necessary</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="fill-y">
                <xs:annotation>
                    <xs:documentation>Scale image to match the height of the UI, cropping if necessary
                    </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fullAlignValue">
        <xs:restriction base="xs:string">
            <xs:enumeration value="start" />
            <xs:enumeration value="end" />
            <xs:enumeration value="center" />
            <xs:enumeration value="top" />
            <xs:enumeration value="bottom" />
            <xs:enumeration value="repeat" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="horizontalAlignValue">
        <xs:restriction base="content:fullAlignValue">
            <xs:enumeration value="start" />
            <xs:enumeration value="end" />
            <xs:enumeration value="center" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="uri">
        <xs:restriction base="xs:anyURI">
            <xs:pattern value="https?://.*" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="eventIdsType">
        <xs:list>
            <xs:simpleType>
                <xs:restriction base="xs:token">
                    <xs:pattern value="([a-zA-Z0-9]+:)?[a-zA-Z0-9_\-]+" />
                </xs:restriction>
            </xs:simpleType>
        </xs:list>
    </xs:simpleType>
    <xs:simpleType name="listenerValue">
        <xs:restriction base="xs:token">
            <xs:pattern value="[a-zA-Z0-9_\-]+" />
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="listenersType">
        <xs:list itemType="content:listenerValue" />
    </xs:simpleType>

    <!-- element nodes -->
    <!--
        Text Content
            i18n-id:    OPTIONAL - OneSky translation id
            text-color: DEFAULT( inherit text-color )
            text-scale: DEFAULT( inherit text-scale )
            text-align: (center|start|end) DEFAULT( start )
    -->
    <xs:complexType name="text">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="i18n-id" type="xs:string" use="optional" />
                <xs:attribute name="text-color" type="content:colorValue" use="optional" />
                <xs:attribute name="text-scale" type="xs:float" use="optional" />
                <xs:attribute name="text-align" type="content:horizontalAlignValue" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!--
        Image
            resource:  REQUIRED - the resource id listed in the manifest
            align:     (start|end|center) DEFAULT( center )
    -->
    <xs:complexType name="image">
        <xs:attribute name="resource" type="xs:string" use="required" />
        <xs:attribute name="align" type="content:horizontalAlignValue" use="optional" />
    </xs:complexType>

    <!-- Button -->
    <xs:complexType name="button">
        <xs:all>
            <xs:element ref="content:text">
                <xs:annotation>
                    <xs:documentation>This element is the text content of this button. The text-color attribute defaults
                        to the primary-text-color of the closest ancestor container.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:all>
        <xs:attribute name="type" default="url" use="optional">
            <xs:annotation>
                <xs:documentation>This attribute determines what type of button this is.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="event">
                        <xs:annotation>
                            <xs:documentation>"event" type buttons will trigger the events specified within the value.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                    <xs:enumeration value="url">
                        <xs:annotation>
                            <xs:documentation>"url" type buttons will launch the url specified within the value.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:enumeration>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" use="required">
            <xs:annotation>
                <xs:documentation>This attribute defines either the url to open for "url" buttons, or the events to
                    trigger for "event" buttons.
                </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
                <xs:union memberTypes="content:uri content:eventIdsType" />
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="color" type="content:colorValue" use="optional">
            <xs:annotation>
                <xs:documentation>This attribute determines the color of the button. This defaults to the primary-color
                    of the closest ancestor container.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!--
        Link
            text-color: DEFAULT( inherit primary-color )
    -->
    <xs:complexType name="link">
        <xs:complexContent>
            <xs:extension base="content:textChild">
                <!-- events: events to fire when link is pressed. -->
                <xs:attribute name="events" type="content:eventIdsType" use="required" />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--
        Input
            name:  REQUIRED - input key name
            type:  (text|email|phone|hidden) DEFAULT( text )
            value: OPTIONAL DEFAULT( empty_string )
    -->
    <xs:complexType name="input">
        <xs:all>
            <xs:element name="label" maxOccurs="1" minOccurs="0" type="content:textChild" />
            <xs:element name="placeholder" maxOccurs="1" minOccurs="0" type="content:textChild" />
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="text" />
                    <xs:enumeration value="email" />
                    <xs:enumeration value="phone" />
                    <xs:enumeration value="hidden" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- Content Elements -->
    <xs:element name="text" type="content:text" />
    <xs:element name="image" type="content:image" />
    <xs:element name="button" type="content:button" />
    <xs:element name="link" type="content:link" />
    <xs:element name="input" type="content:input" />
    <xs:group name="elements">
        <xs:choice>
            <xs:element ref="content:text" />
            <xs:element ref="content:image" />
            <xs:element ref="content:button" />
            <xs:element ref="content:link" />
            <xs:element ref="content:input" />
        </xs:choice>
    </xs:group>
    <xs:complexType name="textChild">
        <xs:all>
            <xs:element ref="content:text" />
        </xs:all>
    </xs:complexType>
</xs:schema>
