<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:content="https://mobile-content-api.cru.org/xmlns/content" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    attributeFormDefault="unqualified" elementFormDefault="qualified"
    targetNamespace="https://mobile-content-api.cru.org/xmlns/content">

    <!-- Value definitions -->
    <xs:simpleType name="colorValue">
        <xs:restriction base="xs:string">
            <xs:pattern value="rgba\([0-9]{1,3},\s*[0-9]{1,3},\s*[0-9]{1,3},\s*([01]|0?\.[0-9]*)\)" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="alignValue">
        <xs:restriction base="xs:string">
            <xs:enumeration value="start" />
            <xs:enumeration value="end" />
            <xs:enumeration value="center" />
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="translatableString">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="i18n-id" type="xs:string" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- element nodes -->
    <!--
        Text Content
            i18n-id:    REQUIRED - OneSky translation id
            text-color: DEFAULT( inherit text-color )
            text-scale: DEFAULT( inherit text-scale )
            text-align: (center|start|end) DEFAULT( start )
    -->
    <xs:complexType name="text">
        <xs:simpleContent>
            <xs:extension base="content:translatableString">
                <xs:attribute name="text-color" type="content:colorValue" use="optional" />
                <xs:attribute name="text-scale" type="xs:float" use="optional" />
                <xs:attribute name="text-align" type="content:alignValue" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!--
        Image
            resource:  REQUIRED - the resource id listed in the manifest
            align:     (start|end|center) DEFAULT( center )
    -->
    <xs:complexType name="image">
        <xs:attribute name="resource" type="xs:string" use="required" />
        <xs:attribute name="align" type="content:alignValue" use="optional" />
    </xs:complexType>

    <!--
        Button
            type:    REQUIRED - (url|event) DEFAULT( url )
            value:   REQUIRED - URL or Event value
    -->
    <xs:complexType name="button">
        <xs:all>
            <xs:element name="text" type="content:translatableString" />
        </xs:all>
        <xs:attribute name="type">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="event" />
                    <xs:enumeration value="url" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" type="xs:string" />
    </xs:complexType>

    <!--
        Paragraph - Vertical stack of content with margin/padding between each item
            Valid child elements: text, image, button
    -->
    <xs:complexType name="paragraph">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="text" type="content:text" />
            <xs:element name="image" type="content:image" />
            <xs:element name="button" type="content:button" />
        </xs:choice>
    </xs:complexType>

    <!--
        Input
            name:  REQUIRED - input key name
            type:  (text|email|phone|hidden) DEFAULT( text )
            value: OPTIONAL DEFAULT( empty_string )
    -->
    <xs:complexType name="input">
        <xs:all>
            <xs:element name="label" maxOccurs="1" minOccurs="0" type="content:inputLabel" />
            <xs:element name="placeholder" maxOccurs="1" minOccurs="0" type="content:inputPlaceholder" />
        </xs:all>
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="text" />
                    <xs:enumeration value="email" />
                    <xs:enumeration value="phone" />
                    <xs:enumeration value="hidden" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="value" type="xs:string" use="optional" />
    </xs:complexType>

    <!--
        Input label
            text-color: DEFAULT( inherit text-color )
    -->
    <xs:complexType name="inputLabel">
        <xs:all>
            <xs:element name="text">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="content:translatableString">
                            <xs:attribute name="text-color" type="content:colorValue" use="optional" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <!--
        Input Placeholder label
            text-color: DEFAULT( inherit text-color )
    -->
    <xs:complexType name="inputPlaceholder">
        <xs:all>
            <xs:element name="text">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="content:translatableString">
                            <xs:attribute name="text-color" type="content:colorValue" use="optional" />
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <!--
        Form Content - vertical stacked content with input fields
            Valid child elements: text, image, button, input
    -->
    <xs:complexType name="form">
        <xs:choice maxOccurs="unbounded">
            <xs:element name="text" type="content:text" />
            <xs:element name="input" type="content:input" />
            <xs:element name="image" type="content:image" />
            <xs:element name="button" type="content:button" />
        </xs:choice>
    </xs:complexType>

    <!-- base elements -->
    <xs:element name="text" type="content:text" />
    <xs:element name="image" type="content:image" />
    <xs:element name="button" type="content:button" />
    <xs:element name="input" type="content:input" />
    <xs:element name="paragraph" type="content:paragraph" />
    <xs:element name="form" type="content:form" />
</xs:schema>
